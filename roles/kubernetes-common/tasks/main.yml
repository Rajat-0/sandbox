---
#- include_vars:
#    file: cloud-config.yaml
#    name: stuff

- name: Grant centos user passwordless sudo
  lineinfile:
    dest: /etc/sudoers
    state: present
    line: 'centos ALL=(ALL) NOPASSWD: ALL'
  become: yes
  become_method: "sudo"
  changed_when: False
  when: ansible_os_family == 'RedHat'

- name: Grant centos user passwordless sudo
  lineinfile:
    dest: /etc/sudoers
    state: present
    line: 'ubuntu ALL=(ALL) NOPASSWD: ALL'
  become: yes
  become_method: "sudo"
  changed_when: False
  when: ansible_os_family == 'Debian'

- name: Copying kubernetes.repo file to dest nodes 
  copy:
    src: kubernetes.repo
    dest: /etc/yum.repos.d/
    owner: root
    group: root
    mode: 0644
  register: install_packages
  changed_when: False
  when: ansible_os_family == 'RedHat'

- name: Update apt cache
  apt:
    update_cache: yes
  become: True
  when: ansible_os_family == 'Debian'

- name: Install initial packages
  package:
    name: "{{ item }}"
    state: installed
  become: True
  with_items:
    - apt-transport-https
    - curl
    - wget
    - vim
    - net-tools
    - telnet
  when: ansible_os_family == 'Debian'

- name: Add an Apt signing key for kubernetes packages, uses whichever key is at the URL
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present
  register: debain_kube_gpgkey_add
  when: ansible_os_family == 'Debian'

- name: create kubernetes.list file
  file:
    path: /etc/apt/sources.list.d/kubernetes.list
    state: touch
    mode: 0755
  when: ansible_os_family == 'Debian'

- name: add content to kubernetes.list file
  blockinfile:
    path: /etc/apt/sources.list.d/kubernetes.list
    marker: "<!-- {mark} ANSIBLE GENRATED kubernetes repo details file -->"
    content: |
      deb https://apt.kubernetes.io/ kubernetes-{{ ansible_distribution_release | lower }} main
  when: ansible_os_family == 'Debian'


- name: Update apt cache
  apt:
    update_cache: yes
  become: True
  when: ansible_os_family == 'Debian'

- name: ensure a list of kubernetes packages installed
  yum:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
    - kubeadm
    - docker
    - vim-enhanced
    - wget
    - libselinux-python
    - net-tools
    - telnet
  when: ansible_os_family == 'RedHat'

- name: Install kubernetes packages
  package:
    name: "{{ item }}"
    state: installed
  become: True
  with_items:
    - kubelet
    - kubeadm
    - kubectl
    - docker.io
  when: ansible_os_family == 'Debian'


- meta: clear_host_errors

- name: Disable selinux
  selinux: state=disabled
  changed_when: False
  when: ansible_os_family == 'RedHat'

- name: disable SELinux
  command: setenforce 0
  changed_when: False
  register: disable_selinux
  failed_when:
    - disable_selinux.rc != 0
  when: ansible_os_family == 'RedHat'

- name: Gather facts
  setup:

- name: Generate /etc/hosts for all of the nodes
  blockinfile:
    dest: /etc/hosts
    marker: "# {mark} ANSIBLE GENERATED HOSTS"
    block: |
        {% for host in groups['kubernetes'] %}
        {{ hostvars[host]['ansible_default_ipv4']['address'] }} {{ hostvars[host]['ansible_hostname']+".novalocal " + hostvars[host]['ansible_hostname'] }}
        {% endfor %}
  register: etc_hosts_entry
  changed_when: False

- name: Add the below entries in the conf file to change the Linux host bridge values.
  lineinfile:
    path: /etc/sysctl.conf
    line: "{{ item }}"
  register: add_lines_to_sysctl
  with_items:
    - "net.bridge.bridge-nf-call-iptables = 1"
    - "net.bridge.bridge-nf-call-ip6tables = 1"
  changed_when: False

- name: start and enable kubernetes services
  systemd:
    name: "{{ item }}"
    state: started
    enabled: True
  with_items:
    - docker
    - kubelet
  when: ansible_os_family == 'RedHat'
