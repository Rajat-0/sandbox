---
# tasks file for vm-deploy
#- name: Prepair localhost for running os_server module or creating vm on openstack using ansible
#  command: pip install shade
- name: Refresh inventory to ensure new instaces exist in inventory
  meta: refresh_inventory

- include: openstack_vm_create.yaml
  when:
    - stuff.base_cloud == 'openstack'

- os_floating_ip:
    state: present
    reuse: yes
    server: "{{stuff.openstack.vm_name_prefix}}{{ item }}"
    network: "{{ stuff.openstack.external_network}}"
    wait: True
  with_sequence:
    count={{ stuff.openstack.count }}
  register: openstackfip
  when:
    - stuff.base_cloud == 'openstack'

- name: Wait for SSH on the Instance
  command: >
    ssh -oBatchMode=yes -oStrictHostKeyChecking=no -i {{ stuff.openstack.key_path }}
    ubuntu@{{item.floating_ip.floating_ip_address}} true
  with_items: "{{ openstackfip.results }}"
  register: result
  until: result|success
  retries: 100
  delay: 2
  when:
    - stuff.base_distro == 'ubuntu'
    - stuff.base_cloud == 'openstack'

- name: Wait for SSH on the Instance
  command: >
    ssh -oBatchMode=yes -oStrictHostKeyChecking=no -i {{ stuff.openstack.key_path }}
    centos@{{item.floating_ip.floating_ip_address}} true
  with_items: "{{ openstackfip.results }}"
  register: result
  until: result|success
  retries: 100
  delay: 2
  when:
    - stuff.base_distro == 'centos'
    - stuff.base_cloud == 'openstack'

- include: openstack_vm_create.yaml
  when:
    - stuff.base_cloud == 'openstack'

- include: openstack_add_host.yaml
  when:
    - stuff.base_cloud == 'openstack'

- include: aws-vm-create.yaml
  when:
    - stuff.base_cloud == 'aws'

- include: aws_add_host_centos.yaml
  when:
    - stuff.base_cloud == 'aws'
    - stuff.base_distro == 'centos'

- include: aws_add_host_ubuntu.yaml
  when:
    - stuff.base_cloud == 'aws'
    - stuff.base_distro == 'ubuntu'

- name: Wait for SSH on the Instance
  command: >
    ssh -oBatchMode=yes -oStrictHostKeyChecking=no -i {{ stuff.AWS.key_path }}
    centos@{{groups['kubernetes'][-1]}} true
  register: result
  until: result|success
  retries: 100
  delay: 3
  when:
    - stuff.base_distro == 'centos'

- name: Wait for SSH on the Instance
  command: >
    ssh -oBatchMode=yes -oStrictHostKeyChecking=no -i {{ stuff.AWS.key_path }}
    ubuntu@{{groups['kubernetes'][-1]}} true
  register: result
  until: result|success
  retries: 100
  delay: 3
  when:
    - stuff.base_distro == 'ubuntu'